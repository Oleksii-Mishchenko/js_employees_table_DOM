{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","editableInput","clickCounter","prevSort","activeRow","addEventListener","ev","empoyees","staff","querySelectorAll","cellNum","target","cellIndex","cellDataType","getDataType","children","textContent","sort","row1","row2","firstCell","secondCell","getNumFromUSD","localeCompare","forEach","row","append","clickedRow","closest","classList","remove","add","tagName","body","insertAdjacentHTML","form","preventDefault","data","Object","fromEntries","FormData","errors","validateData","validationResult","length","notificationMessage","join","addNewEmployee","pushNotification","table","result","description","notification","capitalizeText","message","setTimeout","Number","isInteger","startsWith","usd","slice","split","getUSDFromNum","num","toLocaleString","str","parts","includes","map","part","toUpperCase","obj","validationResults","nameIsValid","name","positionIsValid","position","officeIsValid","office","ageIsValid","age","salaryIsValid","salary","invalidEntries","entries","filter","input","invalidFields","errorsList","entry","index","indexOf","push","field","newEmployee","createElement","innerHTML","reset","generateInput","value","category","container","options","find","option","setAttribute","validateInputData","normalizeInputData","targetCell","cellInitValue","cellCategory","e","saveAndExit","code","type","enteredData"],"mappings":"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","file":"main.f074f0aa.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nlet editableInput = '';\nlet clickCounter = 0;\nlet prevSort = '';\nlet activeRow = '';\n\nthead.addEventListener('click', (ev) => {\n  const empoyees = document.querySelector('tbody');\n  const staff = document.querySelectorAll('tbody tr');\n  const cellNum = ev.target.cellIndex;\n  const cellData = staff[0].children[cellNum].textContent;\n  const cellDataType = getDataType(cellData);\n\n  if (prevSort === ev.target) {\n    clickCounter++;\n  } else {\n    clickCounter = 0;\n  }\n\n  const sortedStaff = [...staff].sort((row1, row2) => {\n    let firstCell = row1.children[cellNum].textContent;\n    let secondCell = row2.children[cellNum].textContent;\n\n    if (clickCounter % 2 !== 0) {\n      firstCell = row2.children[cellNum].textContent;\n      secondCell = row1.children[cellNum].textContent;\n    }\n\n    switch (cellDataType) {\n      case 'num':\n        return firstCell - secondCell;\n      case 'usd':\n        return getNumFromUSD(firstCell) - getNumFromUSD(secondCell);\n      default:\n        return firstCell.localeCompare(secondCell);\n    }\n  });\n\n  sortedStaff.forEach(row => {\n    empoyees.append(row);\n  });\n\n  prevSort = ev.target;\n});\n\ntbody.addEventListener('click', (ev) => {\n  const clickedRow = ev.target.closest('tr');\n\n  if (activeRow) {\n    activeRow.classList.remove('active');\n  }\n\n  clickedRow.classList.add('active');\n  activeRow = clickedRow;\n});\n\ndocument.addEventListener('click', (ev) => {\n  if (ev.target.tagName === 'BODY' && activeRow) {\n    activeRow.classList.remove('active');\n    activeRow = '';\n  }\n});\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form action=\"/\" class=\"new-employee-form\">\n  <label>Name: <input type=\"text\" name=\"name\" data-qa=\"name\"></label>\n  <label>\n    Position:\n    <input type=\"text\" name=\"position\" data-qa=\"position\">\n  </label>\n  <label>\n    Office:\n    <select name=\"office\" data-qa=\"office\">\n      <option disabled selected hidden value=\"\">Select city</option>\n      <option value=\"tokyo\">Tokyo</option>\n      <option value=\"singapore\">Singapore</option>\n      <option value=\"london\">London</option>\n      <option value=\"new-york\">New York</option>\n      <option value=\"edinburgh\">Edinburgh</option>\n      <option value=\"san-francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age: <input type=\"number\" name=\"age\" data-qa=\"age\"></label>\n  <label>Salary: <input type=\"number\" name=\"salary\" data-qa=\"salary\"></label>\n  <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', (ev) => {\n  ev.preventDefault();\n\n  const data = Object.fromEntries(new FormData(form));\n\n  const errors = validateData(data);\n  const validationResult = errors.length > 0 ? 'error' : 'success';\n  const notificationMessage = validationResult === 'success'\n    ? `Congratulations!<br>New employee was successfully added.`\n    : errors.join('<br>');\n\n  if (validationResult === 'error') {\n    pushNotification(validationResult, `\n      Please correct the following errors:<br><br>\n      ${notificationMessage}\n    `);\n\n    return;\n  }\n\n  addNewEmployee(data);\n  pushNotification(validationResult, notificationMessage);\n});\n\nconst table = document.querySelector('tbody');\n\ntable.addEventListener('dblclick', (ev) => {\n  if (editableInput) {\n    pushNotification('warning', `\n      ${editableInput} is not saved!<br>\n      Please enter correct data and press 'Enter'.\n    `);\n\n    return;\n  };\n\n  const targetCell = ev.target.closest('td');\n  const cellInitValue = targetCell.textContent;\n  const cellIndex = targetCell.cellIndex;\n  const cellCategory = thead.children[0].children[cellIndex].textContent;\n  const input = generateInput(cellInitValue, cellCategory);\n\n  editableInput = cellCategory;\n  targetCell.textContent = '';\n  targetCell.append(input);\n\n  input.addEventListener('blur', (e) => {\n    saveAndExit(e);\n  });\n\n  input.addEventListener('keydown', (e) => {\n    if (e.code === 'Enter') {\n      saveAndExit(e);\n    }\n  });\n\n  function saveAndExit(e) {\n    const field = targetCell.querySelector('.cell-input');\n    const validationResult = validateInputData(field.value, cellCategory);\n\n    if (validationResult === 'error' && e.type === 'blur') {\n      pushNotification(validationResult, `\n        ${cellCategory} is not valid. Please correct!\n      `);\n    }\n\n    if (validationResult === 'error') {\n      targetCell.textContent = cellInitValue;\n      input.remove();\n      editableInput = '';\n\n      return;\n    }\n\n    const enteredData = normalizeInputData(field.value, cellCategory);\n\n    targetCell.textContent = enteredData;\n\n    if (e.type === 'blur') {\n      pushNotification(validationResult, `\n        ${cellCategory} is saved.\n      `);\n    }\n\n    editableInput = '';\n    input.remove();\n  };\n});\n\nfunction pushNotification(result, description) {\n  const notification = `\n    <div\n      class=\"notification ${result}\"\n      data-qa=\"notification\"\n    >\n      <h2 class=\"title\">${capitalizeText(result)}</h2>\n      <p>${description}</p>\n    </div>\n  `;\n\n  document.body.insertAdjacentHTML('beforeend', notification);\n\n  const message = document.querySelector(`.${result}`);\n\n  setTimeout(() => {\n    message.remove();\n  }, 3000);\n};\n\nfunction getDataType(data) {\n  if (Number.isInteger(+data)) {\n    return 'num';\n  } else if (data.startsWith('$')) {\n    return 'usd';\n  } else {\n    return 'str';\n  }\n};\n\nfunction getNumFromUSD(usd) {\n  return +usd.slice(1).split(',').join('');\n};\n\nfunction getUSDFromNum(num) {\n  const usd = +num;\n\n  return '$' + usd.toLocaleString('en-US');\n};\n\nfunction capitalizeText(str) {\n  if (!str) {\n    return;\n  }\n\n  const parts = (str.includes('-')) ? str.split('-') : str.split(' ');\n\n  return parts.map(part => {\n    return part.slice(0, 1).toUpperCase() + part.slice(1);\n  }).join(' ');\n};\n\nfunction validateData(obj) {\n  const validationResults = {\n    nameIsValid: obj.name.length >= 4,\n    positionIsValid: !!obj.position,\n    officeIsValid: !!obj.office,\n    ageIsValid: obj.age >= 18 && obj.age <= 90,\n    salaryIsValid: obj.salary > 0,\n  };\n\n  const inputs = Object.entries(validationResults);\n  const invalidEntries = inputs.filter(input => {\n    return input[1] === false;\n  });\n  const invalidFields = [];\n\n  invalidEntries.forEach(entry => {\n    const index = entry[0].indexOf('IsValid');\n\n    invalidFields.push(capitalizeText(entry[0].slice(0, index)));\n  });\n\n  const errorsList = invalidFields.map(field => {\n    switch (field) {\n      case 'Name':\n        return `- ${field} length is less than 4 letters`;\n      case 'Position':\n        return `- ${field} is not specified`;\n      case 'Office':\n        return `- ${field} city is not specified`;\n      case 'Age':\n        return `- ${field} is not in range from 18 to 90`;\n      case 'Salary':\n        return `- ${field} is not specified`;\n      default:\n        return '- Unexpected error';\n    }\n  });\n\n  return errorsList;\n};\n\nfunction addNewEmployee(data) {\n  const newEmployee = document.createElement('tr');\n\n  newEmployee.innerHTML = `\n    <td>${capitalizeText(data.name)}</td>\n    <td>${capitalizeText(data.position)}</td>\n    <td>${capitalizeText(data.office)}</td>\n    <td>${data.age}</td>\n    <td>${getUSDFromNum(data.salary)}</td>\n  `;\n\n  tbody.append(newEmployee);\n  form.reset();\n};\n\nfunction generateInput(value, category) {\n  const container = document.createElement('div');\n\n  switch (category) {\n    case ('Salary'):\n      container.innerHTML = `\n        <input\n          type=\"number\"\n          class=\"cell-input\"\n          value=\"${getNumFromUSD(value)}\"\n          autofocus\n        >\n      `;\n      break;\n\n    case ('Age'):\n      container.innerHTML = `\n        <input\n          type=\"number\"\n          class=\"cell-input\"\n          value=\"${value}\"\n          autofocus\n        >\n      `;\n      break;\n\n    case ('Office'):\n      container.innerHTML = `\n        <select name=\"office\" class=\"cell-input\">\n          <option value=\"tokyo\">Tokyo</option>\n          <option value=\"singapore\">Singapore</option>\n          <option value=\"london\">London</option>\n          <option value=\"new-york\">New York</option>\n          <option value=\"edinburgh\">Edinburgh</option>\n          <option value=\"san-francisco\">San Francisco</option>\n        </select>\n      `;\n\n      const options = container.querySelectorAll('option');\n\n      [...options].find(option => {\n        return option.textContent === value;\n      }).setAttribute('selected', true);\n      break;\n\n    default:\n      container.innerHTML = `\n        <input\n          type=\"text\"\n          class=\"cell-input\"\n          value=\"${value}\"\n          autofocus\n        >\n      `;\n  };\n\n  return container.querySelector('.cell-input');\n};\n\nfunction validateInputData(data, category) {\n  switch (category) {\n    case 'Salary':\n      return data > 0 ? 'success' : 'error';\n    case 'Age':\n      return data >= 18 && data <= 90 ? 'success' : 'error';\n    case 'Name':\n      return data.length >= 4 ? 'success' : 'error';\n    default:\n      return data ? 'success' : 'error';\n  };\n};\n\nfunction normalizeInputData(data, category) {\n  switch (category) {\n    case 'Salary':\n      return getUSDFromNum(data);\n    case 'Age':\n      return data;\n    default:\n      return capitalizeText(data);\n  };\n};\n"]}